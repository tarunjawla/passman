name: Build Desktop App

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact: passman-linux.tar.gz
            platform: linux
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact: passman-macos.dmg
            platform: macos
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact: passman-macos-arm64.dmg
            platform: macos-arm64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact: passman-windows.exe
            platform: windows

    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    
    - name: Install system dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libwebkit2gtk-4.1-dev build-essential curl wget libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev

    - name: Install system dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        # macOS uses system WebKit, no additional dependencies needed
        echo "macOS uses system WebKit, no additional dependencies required"

    - name: Install system dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        # Windows uses system WebView2, no additional dependencies needed
        echo "Windows uses system WebView2, no additional dependencies required"

    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: desktop/package-lock.json
    
    - name: Install dependencies
      run: |
        cd desktop
        npm ci
    
    - name: Build frontend
      run: |
        cd desktop
        npm run build
    
    - name: Install Tauri CLI
      run: |
        cd desktop
        npm install -g @tauri-apps/cli@latest
    
    - name: Build Tauri app
      run: |
        cd desktop
        npm run tauri build -- --target ${{ matrix.target }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Create archive (Linux)
      if: matrix.platform == 'linux'
      run: |
        cd desktop/src-tauri/target/${{ matrix.target }}/release/bundle/
        tar -czf ../../../../../../${{ matrix.artifact }} passman
        cd ../../../../../
        ls -la ${{ matrix.artifact }}
    
    - name: Create archive (macOS)
      if: matrix.platform == 'macos'
      run: |
        cd desktop/src-tauri/target/${{ matrix.target }}/release/bundle/dmg/
        cp *.dmg ../../../../../../${{ matrix.artifact }}
        cd ../../../../../../
        ls -la ${{ matrix.artifact }}
    
    - name: Create archive (macOS ARM64)
      if: matrix.platform == 'macos-arm64'
      run: |
        cd desktop/src-tauri/target/${{ matrix.target }}/release/bundle/dmg/
        cp *.dmg ../../../../../../${{ matrix.artifact }}
        cd ../../../../../../
        ls -la ${{ matrix.artifact }}
    
    - name: Create archive (Windows)
      if: matrix.platform == 'windows'
      run: |
        cd desktop/src-tauri/target/${{ matrix.target }}/release/bundle/msi/
        copy *.msi ../../../../../../${{ matrix.artifact }}
        cd ../../../../../../
        dir ${{ matrix.artifact }}
    
    - name: Generate checksum
      run: |
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          certutil -hashfile ${{ matrix.artifact }} SHA256 > ${{ matrix.artifact }}.sha256
          type ${{ matrix.artifact }}.sha256
        else
          shasum -a 256 ${{ matrix.artifact }} > ${{ matrix.artifact }}.sha256
          cat ${{ matrix.artifact }}.sha256
        fi
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact }}
        path: ${{ matrix.artifact }}
    
    - name: Upload checksum
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact }}.sha256
        path: ${{ matrix.artifact }}.sha256
